'use strict';

var _ArrowBox = require('../ArrowBox');

var _ArrowBox2 = _interopRequireDefault(_ArrowBox);

var _Colors = require('../Colors');

var _Colors2 = _interopRequireDefault(_Colors);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var React = require('react');
var classNames = require('classnames');

var InputImageUrl = React.createClass({
  displayName: 'InputImageUrl',

  propTypes: {
    onSubmit: React.PropTypes.func,
    onInputChange: React.PropTypes.func,
    placeholder: React.PropTypes.string,
    error: React.PropTypes.string
  },
  getDefaultProps: function getDefaultProps() {
    return {
      url: '',
      placeholder: 'Sample Placeholder'
    };
  },
  getInitialState: function getInitialState() {
    return { url: '' };
  },

  /**
   * During changes to the url input
   */
  handleInputChange: function handleInputChange(e) {
    this.setState({ url: e.target.value });
    if (this.props.onInputChange) {
      this.props.onInputChange.call(this, e);
    }
  },

  /**
   * On Input url key press
   */
  handleKeyPress: function handleKeyPress(e) {
    if (e.key === 'Enter' && this.state.url !== '') {
      if (this.props.onSubmit) {
        this.props.onSubmit.call(this, e, this.state.url);
      }
    }
  },
  render: function render() {
    return React.createElement(
      'div',
      { style: { position: 'relative' } },
      React.createElement('input', {
        className: classNames('image-picker--url-input', 'base--input', { 'image-picker--url-input_error': this.props.error }),
        onChange: this.handleInputChange,
        onKeyPress: this.handleKeyPress,
        placeholder: this.props.placeholder,
        type: 'text',
        value: this.state.url
      }),
      React.createElement(
        _ArrowBox2.default,
        {
          className: 'image-picker--arrow-box',
          direction: 'bottom',
          icon: 'error',
          color: _Colors2.default.red_50,
          width: '100%',
          show: Boolean(this.props.error)
        },
        React.createElement(
          'p',
          { className: 'base--p image-picker--error-message' },
          this.props.error
        )
      )
    );
  }
});

module.exports = InputImageUrl;
//# sourceMappingURL=Url.js.map
