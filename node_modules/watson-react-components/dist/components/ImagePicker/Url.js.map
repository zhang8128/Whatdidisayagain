{"version":3,"sources":["ImagePicker/Url.js"],"names":["React","require","classNames","InputImageUrl","createClass","propTypes","onSubmit","PropTypes","func","onInputChange","placeholder","string","error","getDefaultProps","url","getInitialState","handleInputChange","e","setState","target","value","props","call","handleKeyPress","key","state","render","position","red_50","Boolean","module","exports"],"mappings":";;AAAA;;;;AACA;;;;;;AACA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,aAAaD,QAAQ,YAAR,CAAnB;;AAEA,IAAME,gBAAgBH,MAAMI,WAAN,CAAkB;AAAA;;AACtCC,aAAW;AACTC,cAAUN,MAAMO,SAAN,CAAgBC,IADjB;AAETC,mBAAeT,MAAMO,SAAN,CAAgBC,IAFtB;AAGTE,iBAAaV,MAAMO,SAAN,CAAgBI,MAHpB;AAITC,WAAOZ,MAAMO,SAAN,CAAgBI;AAJd,GAD2B;AAOtCE,iBAPsC,6BAOpB;AAChB,WAAO;AACLC,WAAK,EADA;AAELJ,mBAAa;AAFR,KAAP;AAID,GAZqC;AAatCK,iBAbsC,6BAapB;AAChB,WAAO,EAAED,KAAK,EAAP,EAAP;AACD,GAfqC;;AAgBtC;;;AAGAE,mBAnBsC,6BAmBpBC,CAnBoB,EAmBjB;AACnB,SAAKC,QAAL,CAAc,EAAEJ,KAAKG,EAAEE,MAAF,CAASC,KAAhB,EAAd;AACA,QAAI,KAAKC,KAAL,CAAWZ,aAAf,EAA8B;AAC5B,WAAKY,KAAL,CAAWZ,aAAX,CAAyBa,IAAzB,CAA8B,IAA9B,EAAoCL,CAApC;AACD;AACF,GAxBqC;;AAyBtC;;;AAGAM,gBA5BsC,0BA4BvBN,CA5BuB,EA4BpB;AAChB,QAAIA,EAAEO,GAAF,KAAU,OAAV,IAAqB,KAAKC,KAAL,CAAWX,GAAX,KAAmB,EAA5C,EAAgD;AAC9C,UAAI,KAAKO,KAAL,CAAWf,QAAf,EAAyB;AACvB,aAAKe,KAAL,CAAWf,QAAX,CAAoBgB,IAApB,CAAyB,IAAzB,EAA+BL,CAA/B,EAAkC,KAAKQ,KAAL,CAAWX,GAA7C;AACD;AACF;AACF,GAlCqC;AAmCtCY,QAnCsC,oBAmC7B;AACP,WACE;AAAA;AAAA,QAAK,OAAO,EAAEC,UAAU,UAAZ,EAAZ;AACE;AACE,mBAAWzB,WACT,yBADS,EAET,aAFS,EAGT,EAAE,iCAAiC,KAAKmB,KAAL,CAAWT,KAA9C,EAHS,CADb;AAME,kBAAU,KAAKI,iBANjB;AAOE,oBAAY,KAAKO,cAPnB;AAQE,qBAAa,KAAKF,KAAL,CAAWX,WAR1B;AASE,cAAK,MATP;AAUE,eAAO,KAAKe,KAAL,CAAWX;AAVpB,QADF;AAaE;AAAA;AAAA;AACE,qBAAU,yBADZ;AAEE,qBAAU,QAFZ;AAGE,gBAAK,OAHP;AAIE,iBAAO,iBAAOc,MAJhB;AAKE,iBAAM,MALR;AAME,gBAAMC,QAAQ,KAAKR,KAAL,CAAWT,KAAnB;AANR;AAQE;AAAA;AAAA,YAAG,WAAU,qCAAb;AAAoD,eAAKS,KAAL,CAAWT;AAA/D;AARF;AAbF,KADF;AA0BD;AA9DqC,CAAlB,CAAtB;;AAiEAkB,OAAOC,OAAP,GAAiB5B,aAAjB","file":"Url.js","sourcesContent":["import ArrowBox from '../ArrowBox';\nimport Colors from '../Colors';\nconst React = require('react');\nconst classNames = require('classnames');\n\nconst InputImageUrl = React.createClass({\n  propTypes: {\n    onSubmit: React.PropTypes.func,\n    onInputChange: React.PropTypes.func,\n    placeholder: React.PropTypes.string,\n    error: React.PropTypes.string,\n  },\n  getDefaultProps() {\n    return {\n      url: '',\n      placeholder: 'Sample Placeholder',\n    };\n  },\n  getInitialState() {\n    return { url: '' };\n  },\n  /**\n   * During changes to the url input\n   */\n  handleInputChange(e) {\n    this.setState({ url: e.target.value });\n    if (this.props.onInputChange) {\n      this.props.onInputChange.call(this, e);\n    }\n  },\n  /**\n   * On Input url key press\n   */\n  handleKeyPress(e) {\n    if (e.key === 'Enter' && this.state.url !== '') {\n      if (this.props.onSubmit) {\n        this.props.onSubmit.call(this, e, this.state.url);\n      }\n    }\n  },\n  render() {\n    return (\n      <div style={{ position: 'relative' }}>\n        <input\n          className={classNames(\n            'image-picker--url-input',\n            'base--input',\n            { 'image-picker--url-input_error': this.props.error }\n          )}\n          onChange={this.handleInputChange}\n          onKeyPress={this.handleKeyPress}\n          placeholder={this.props.placeholder}\n          type=\"text\"\n          value={this.state.url}\n        />\n        <ArrowBox\n          className=\"image-picker--arrow-box\"\n          direction=\"bottom\"\n          icon=\"error\"\n          color={Colors.red_50}\n          width=\"100%\"\n          show={Boolean(this.props.error)}\n        >\n          <p className=\"base--p image-picker--error-message\">{this.props.error}</p>\n        </ArrowBox>\n      </div>\n    );\n  },\n});\n\nmodule.exports = InputImageUrl;\n"]}